{"version":3,"sources":["delete-duplicate-posts.js"],"names":["cp_ddp_freemius_opt_in","element","nonce","jQuery","val","choice","data","ajax","type","url","ajaxurl","async","action","opt_nonce","success","location","reload","error","xhr","textStatus","_error","console","log","statusText","document","ready","senddata","ddp_refresh_log","empty","_ajax_nonce","cp_ddp","loglines_nonce","dataType","response","loglines","results","each","key","value","append","datime","note","removeClass","fail","window","statusCode","ddp_get_duplicates","stepid","self","this","prop","addClass","dupes","html","msg","show","ID","permalink","title","status","orgpermalink","orgtitle","orgID","why","slideDown","nextstep","parseInt","on","e","preventDefault","checked_posts_to_delete","push","undefined","length","alert","text_selectsomething","confirm","text_areyousure","deletedupes_nonce","checked_posts","checked","closest","find","hide","trigger"],"mappings":"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","sourcesContent":["/* globals jQuery:true, ajaxurl:true, cp_ddp:true  */\n\nfunction cp_ddp_freemius_opt_in( element ) { // eslint-disable-line no-unused-vars\n\tvar nonce  = jQuery( '#cp-ddp-freemius-opt-nonce' ).val(); // Nonce.\n\tvar choice = jQuery( element ).data( 'opt' ); // Choice.\n\n\tjQuery.ajax( {\n\t\ttype: 'POST',\n\t\turl: ajaxurl,\n\t\tasync: true,\n\t\tdata: {\n\t\t\taction: 'cp_ddp_freemius_opt_in',\n\t\t\topt_nonce: nonce,\n\t\t\tchoice: choice\n\t\t},\n\t\tsuccess: function( ) {\n\t\t\tlocation.reload();\n\t\t},\n\t\terror: function( xhr, textStatus, error ) {\n\t\t\tconsole.log( xhr.statusText );\n\t\t\tconsole.log( textStatus );\n\t\t\tconsole.log( error );\n\t\t}\n\t} );\n}\n\n\njQuery(document).ready(function(){\n\n\tlet senddata = [];\n\tsenddata['stepid'] = 0;\n//\tddp_get_duplicates(1,senddata); // @todo\n\n\t\n// DELETE DUPES\njQuery(document).on('click', '#deleteduplicateposts_deleteall', function(e) {\n\n\te.preventDefault();\n\t\n\n\tjQuery('#log .spinner').addClass('is-active');\n\tvar checked_posts_to_delete = [];\n\tjQuery(\".duplicatetable input[name='delpost[]']:checked\").each(function (){\n\t\tchecked_posts_to_delete.push(parseInt(jQuery(this).val()));\n\t});\n\n\tif ( checked_posts_to_delete === undefined || checked_posts_to_delete.length === 0 ) {\n\t\talert(cp_ddp.text_selectsomething);\n\t\treturn false;\n\t}\n\n\tif ( !confirm( cp_ddp.text_areyousure ) ) {\n\t\treturn;\n\t}\n\n\tjQuery('#ddp_container .dupelist .duplicatetable tbody').empty();\n\n\n\tjQuery.ajax({\n\t\ttype: 'POST',\n\t\turl: ajaxurl,\n\t\tdata: {\n\t\t\t'_ajax_nonce': cp_ddp.deletedupes_nonce,\n\t\t\t'action': 'ddp_delete_duplicates',\n\t\t\t'checked_posts' : checked_posts_to_delete\n\t\t},\n\t\tdataType: \"json\",\n\t\tsuccess: function( ) {\n\t\t\tddp_get_duplicates(1,senddata);\n\t\t\tddp_refresh_log();\n\t\t\t// location.reload(true);\n\t\t}\n\t}).fail(function (response) {\n\t\tjQuery('#log .spinner').removeClass('is-active');\n\t\tif ( window.console && window.console.log ) {\n\t\t\twindow.console.log( response.statusCode+' '+response.statusText );\n\t\t\tddp_get_duplicates(1,senddata);\n\t\t\tddp_refresh_log();\n\t\t\t// location.reload(true);\n\t\t}\n\t});\n\n\n});\n\n\n\t// REFRESH LIST\n\tjQuery(document).on('click', '#deleteduplicateposts_resetview', function(e) {\n\t\te.preventDefault();\n\t\tjQuery('#ddp_container .dupelist .duplicatetable tbody').empty();\n\t\tddp_get_duplicates(1,senddata);\n\t\tddp_refresh_log();\n\t});\n\n\n\n\t/**\n\t * ddp_refresh_log.\n\t *\n\t * @author\tLars Koudal\n\t * @since\tv0.0.1\n\t * @version\tv1.0.0\tSunday, January 10th, 2021.\n\t * @return\tvoid\n\t */\n\tfunction ddp_refresh_log() {\n\t\t// REFRESH LOG\n\t\tjQuery('#ddp_log').empty();\n\t\tjQuery.ajax({\n\t\t\ttype: 'POST',\n\t\t\turl: ajaxurl,\n\t\t\tdata: {\n\t\t\t\t'_ajax_nonce': cp_ddp.loglines_nonce,\n\t\t\t\t'action': 'ddp_get_loglines'\n\t\t\t},\n\t\t\tdataType: \"json\",\n\t\t\tsuccess: function( response ) {\n\n\t\t\t\tlet loglines = response.data.results;\n\n\t\t\t\tif (loglines) {\n\n\t\t\t\t\tjQuery.each( loglines, function( key, value ) {\n\t\t\t\t\t\tjQuery('#ddp_log').append('<li><code>'+value.datime+'</code> '+value.note+'</li>');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tjQuery('#log .spinner').removeClass('is-active');\n\t\t\t}\n\t\t}).fail(function (response) {\n\t\t\tjQuery('#log .spinner').removeClass('is-active');\n\t\t\tif ( window.console && window.console.log ) {\n\t\t\t\twindow.console.log( response.statusCode+' '+response.statusText );\n\t\t\t}\n\t\t});\n\t}\n\n\n\n/**\n *\n * @author\tLars Koudal\n * @since\tv0.0.1\n * @version\tv1.0.0\tSunday, January 10th, 2021.\n * @global\n * @param\tmixed\tstepid - integer, starts at 1\n * @param\tmixed\tdata  \t\n * @param\tmixed\tself  \t\n * @return\tvoid\n */\nfunction ddp_get_duplicates( stepid, data, self ) {\n\n\n\tjQuery( \"#ddp_container #ddp_buttons input\" ).each(function() {\n\t\tjQuery( this ).prop(\"disabled\", true);\n\t});\n\n\tjQuery('#ddp_container #dashboard .spinner').addClass('is-active');\n\n\t//let testid = data[stepid];\n\n\tjQuery.ajax({\n\t\ttype: 'POST',\n\t\turl: ajaxurl,\n\t\tdata: {\n\t\t\t'_ajax_nonce': cp_ddp.nonce,\n\t\t\t'action': 'ddp_get_duplicates',\n\t\t\t'stepid': stepid\n\t\t},\n\t\tdataType: \"json\",\n\t\tsuccess: function( response ) {\n\n\t\t\tlet dupes = response.data.dupes;\n\n\t\t\tif (dupes) {\n\n\t\t\t\tjQuery('#ddp_container #dashboard .statusdiv .statusmessage').html(response.data.msg).show();\t\t\t\n\t\t\t\tjQuery('#ddp_container #dashboard .statusdiv .dupelist .duplicatetable').show();\n\n\t\t\t\tjQuery.each( dupes, function( key, value ) {\n\t\t\t\t\tjQuery('#ddp_container #dashboard .statusdiv .dupelist .duplicatetable tbody').append('<tr><th scope=\"row\" class=\"check-column\"><label class=\"screen-reader-text\" for=\"cb-select-'+value.ID+'\">Select Post</label><input id=\"cb-select-'+value.ID+'\" type=\"checkbox\" name=\"delpost[]\" value=\"'+value.ID+'\"><div class=\"locked-indicator\"></div></th><td><a href=\"'+value.permalink+'\" target=\"_blank\">'+value.title+'</a> (ID #'+value.ID+' type:'+value.type+' status:'+value.status+')</td><td><a href=\"'+value.orgpermalink+'\" target=\"_blank\">'+value.orgtitle+'</a> (ID #'+value.orgID+')'+value.why+'</td></tr>');\n\n\t\t\t\t});\n\n\t\t\t\tjQuery('#ddp_container #dashboard .statusdiv .dupelist .duplicatetable tbody').slideDown();\n\n\t\t\t\tjQuery( \"#ddp_container #ddp_buttons input\" ).each(function() {\n\t\t\t\t\tjQuery( this ).prop(\"disabled\", false);\n\t\t\t\t});\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\tjQuery('#ddp_container #dashboard .statusdiv .statusmessage').html(response.data.msg).show();\t\t\t\n\t\t\t}\n\t\t\tjQuery('#ddp_container #dashboard .spinner').removeClass('is-active');\n\t\t\tif( '-1' == response.data.nextstep ) {\n\t\t\t\t// Something went wrong.\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif ( parseInt(response.data.nextstep) > 0 ) {\n\t\t\t\t\tddp_get_duplicates( parseInt( response.data.nextstep ), data, self );\n\t\t\t\t}\n\n\n\t\t\t}\n\t\t\tddp_refresh_log();\n\t\t}\n\t}).fail(function (response) {\n\t\tddp_refresh_log();\n\t\tjQuery('#ddp_container #dashboard .spinner').removeClass('is-active');\n\n\t\tif ( window.console && window.console.log ) {\n\t\t\twindow.console.log( response.statusCode+' '+response.statusText );\n\t\t}\n\t});\n\n\n\n}\n\n\n\n\t\t// Show / hide input fields in admin based on selected compare method.\n\t\tjQuery(document).on('click', '.ddpcomparemethod li', function() {\n\n\t\t\tjQuery(\".ddpcomparemethod input:radio\").each(function () {\n\n\t\t\t\tif (this.checked) {\n\t\t\t\t\tjQuery(this).closest( 'li').find('.ddp-compare-details').show();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjQuery(this).closest( 'li').find('.ddp-compare-details').hide();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t// Pretend click\n\t\tjQuery('.ddpcomparemethod li').trigger('click');\n\t});"]}